
/* joins: select all the computers from the products table:
using the products table and the categories table, return the product name and the category name */


-- joins: select all the computers from the products table:
-- using the products table and the categories table: 
-- SELECT the product name and the category name */
SELECT  products.Name, categories.Name
FROM products
INNER JOIN categories
ON products.CategoryID = categories.CategoryID
WHERE categories.CategoryID = 1;

--------------------------------


-- joins: find all product names, product prices, and products ratings
-- that have a rating of 5 */
SELECT * 
FROM products
INNER JOIN reviews
ON products.ProductID = reviews.ProductID
WHERE reviews.Rating = 5;



---------------------------------
-- ANYTIME you AGGREGATE (or such functions) must use an alias
-- because it has no other way of referencing
-- joins: find the employee with the most
-- total quantity sold.  use the sum(
-- function and group by
-- Without "group by" all employees would be summed up in one row
SELECT  employees.FirstName, employees.LastName, SUM(sales.Quantity) AS Quantity
FROM employees
INNER JOIN sales
ON employees.EmployeeID = sales.EmployeeID
GROUP BY employees.employeeID ORDER BY Quantity DESC;


--------------------------------
-- find the name of the department [ categories.DepartmentID ], and the
-- name of the category for Appliances and Games  [ products.CategoryID ]
SELECT categories.DepartmentID, products.CategoryID 
FROM categories
INNER JOIN products
ON categories.CategoryID = products.CategoryID
WHERE products.CategoryID = "Appliances" OR "Games";


--------------------------------
-- find the product name, total # sold, and total price sold,
-- for Eagles: Hotel California --You may need to use SUM() 
SELECT products.Name, SUM(sales.Quantity) AS SUMSALES, SUM(sales.Quantity * products.Price) AS SUMPRICE
FROM sales
INNER JOIN products
ON products.ProductID = sales.ProductID
WHERE products.Name LIKE "%California%"
GROUP BY products.Name;


-------------------------------
-- find Product name, reviewer name, rating, and comment on
-- the Visio TV. (only return for the lowest rating!)
-- find Product name [ products.Name ], reviewer name [ reviews.Reviewer ], rating [ reviews.Rating ] , and comment [ reviews.Comment ] on
-- the Visio TV. [ WHERE products.Name LIKE [%Visio%" ]  (only return for the lowest rating!)
SELECT products.Name, reviews.Reviewer, reviews.Rating, reviews.Comment
FROM products
INNER JOIN reviews
ON products.ProductID = reviews.ProductID
WHERE products.Name LIKE "%Visio%"
ORDER BY reviews.Rating ASC
LIMIT 1 ;




-- ------------------------------------------ Extra - May be difficult
-- Your goal is to write a query that serves as an employee
-- sales report.  This query should return the employeeID,
-- the employee's first and last name, the name of each product,
-- how many of that product they sold *
SELECT employees.EmployeeID, employees.FirstName, employees.LastName, sales.ProductID, sales.Quantity
FROM employees
INNER JOIN sales
ON employees.EmployeeID = sales.EmployeeID
INNER JOIN products
ON products.ProductID = sales.ProductID
ORDER BY sales.Quantity DESC;

SELECT employees.EmployeeID, employees.FirstName, employees.LastName, products.Name, Sum(sales.Quantity)
FROM employees
INNER JOIN sales
ON employees.EmployeeID = sales.EmployeeID
INNER JOIN products
ON products.ProductID = sales.ProductID
GROUP BY employees.EmployeeID, products.ProductID
ORDER BY employees.FirstName;




